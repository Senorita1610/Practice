#include<bits/stdc++.h>
using namespace std;
const int N=1e3+5;
int n,m,cnt;
vector<int>List[N];
int low[N],num[N];
int parent[N];
int dem=0;
void tarjan(int u)
{
    low[u]=num[u]=++cnt;
    for(auto x:List[u])
    {
        if(x==parent[u]) continue;
        if(num[x]) low[u]=min(low[u],num[x]);
        else
        {
            parent[x]=u;
            tarjan(x);
            low[u]=min(low[u],low[x]);
        }
    }
}
vector<pair<int,int>>tmp;
int main()
{
    cin>>n>>m;
    for(int i=1;i<=m;i++)
    {
    	int x,y;
    	cin>>x>>y;
    	List[x].push_back(y);
    	List[y].push_back(x);
	}
	for(int i=1;i<=n;i++)
	{
		if(!num[i]) tarjan(i);
	}
	int child[N],check[N];
	memset(child,0,sizeof(child));
	memset(check,0,sizeof(check));
	for(int i=1;i<=n;i++)
	{
		int u=parent[i];
		child[u]++;
	}
	for(int i=1;i<=n;i++)
	{
		int u=parent[i];
		if(u&&parent[u]&&low[i]>=num[u]) check[u]=1;
	}
	for(int i=1;i<=n;i++)
	{
		if(parent[i]==0&&child[i]>=2) check[i]=1;
	}
	for(int i=1;i<=n;i++)
	{
		if(check[i])
		{
			dem++;
		}
	}
	for(int i=1;i<=n;i++)
    {
        if(parent[i]>0&&low[i]==num[i]) tmp.push_back({min(i,parent[i]),max(i,parent[i])});
    }
    cout<<dem<<" "<<tmp.size();
    return 0;
}
